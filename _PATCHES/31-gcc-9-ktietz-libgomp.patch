# HG changeset patch

From: J.M. Eubank <john@thesnappy.net>

# Parent  373d07c7d11bfc0eb5453573ee8ca5f4c4868a3f
---
 libgomp/team.c                       |    4 ++--
 libgomp/testsuite/config/default.exp |    4 ++++
 libgomp/work.c                       |    3 ++-
 3 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/libgomp/team.c b/libgomp/team.c
index 8b7c60930..3bc0884a3 100644
--- a/libgomp/team.c
+++ b/libgomp/team.c
@@ -171,7 +171,7 @@ gomp_new_team (unsigned nthreads)
     {
       size_t extra = sizeof (team->ordered_release[0])
 		     + sizeof (team->implicit_task[0]);
-      team = gomp_malloc (sizeof (*team) + nthreads * extra);
+      team = gomp_malloc_cleared (sizeof (*team) + nthreads * extra);
 
 #ifndef HAVE_SYNC_BUILTINS
       gomp_mutex_init (&team->work_share_list_free_lock);
@@ -1102,7 +1102,7 @@ struct gomp_task_icv *
 gomp_new_icv (void)
 {
   struct gomp_thread *thr = gomp_thread ();
-  struct gomp_task *task = gomp_malloc (sizeof (struct gomp_task));
+  struct gomp_task *task = gomp_malloc_cleared (sizeof (struct gomp_task));
   gomp_init_task (task, NULL, &gomp_global_icv);
   thr->task = task;
 #ifdef LIBGOMP_USE_PTHREADS
diff --git a/libgomp/testsuite/config/default.exp b/libgomp/testsuite/config/default.exp
index b3d3bba6f..1a6f67371 100644
--- a/libgomp/testsuite/config/default.exp
+++ b/libgomp/testsuite/config/default.exp
@@ -15,3 +15,7 @@
 # <http://www.gnu.org/licenses/>.
 
 load_lib "standard.exp"
+
+# Support for old dejagnu.  Must be loaded here, not in libstdc++.exp, to
+# make sure all existing procs are loaded when their presence is tested.
+load_file $srcdir/../../gcc/testsuite/lib/dejapatches.exp
diff --git a/libgomp/work.c b/libgomp/work.c
index a589b8b52..3fff52d5d 100644
--- a/libgomp/work.c
+++ b/libgomp/work.c
@@ -85,6 +85,7 @@ alloc_work_share (struct gomp_team *team)
 #else
   ws = gomp_malloc (team->work_share_chunk * sizeof (struct gomp_work_share));
 #endif
+  memset (ws, 0, team->work_share_chunk * sizeof (struct gomp_work_share));
   ws->next_alloc = team->work_shares[0].next_alloc;
   team->work_shares[0].next_alloc = ws;
   team->work_share_list_alloc = &ws[1];
@@ -191,7 +192,7 @@ gomp_work_share_start (size_t ordered)
   /* Work sharing constructs can be orphaned.  */
   if (team == NULL)
     {
-      ws = gomp_malloc (sizeof (*ws));
+      ws = gomp_malloc_cleared (sizeof (*ws));
       gomp_init_work_share (ws, ordered, 1);
       thr->ts.work_share = ws;
       return true;
